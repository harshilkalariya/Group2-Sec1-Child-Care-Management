{"version":3,"file":"src_app_profile_feedback_feedback_module_ts.js","mappings":"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","sources":["./src/app/profile/feedback/feedback-routing.module.ts","./src/app/profile/feedback/feedback.module.ts","./src/app/profile/feedback/feedback.page.ts","./src/app/service/feedback/feedback.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\n\nimport { FeedbackPage } from './feedback.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FeedbackPageRoutingModule\n  ],\n  declarations: [FeedbackPage]\n})\nexport class FeedbackPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { FeedbackData } from 'src/app/models/login.model';\nimport { FeedbackService } from 'src/app/service/feedback/feedback.service';\nimport { ToastService } from 'src/app/service/toast/toast.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\nexport class FeedbackPage implements OnInit {\n\n  feedbackOption: string[] = ['About child', 'About instructor', 'Other']\n  feedbackType: string = '';\n  feedbackDesc: string = '';\n  descLength: number = 0\n\n\n  constructor(\n    private toastService: ToastService,\n    private feedBackService: FeedbackService,\n    private router: Router,\n    private alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  calculateLength() {\n    this.descLength = this.feedbackDesc.length\n  }\n\n  async submitFeedback() {\n    if (this.feedbackType && this.feedbackDesc) {\n      let feedBack: FeedbackData = {\n        type: this.feedbackType,\n        desc: this.feedbackDesc\n      }\n      const alert = await this.alertController.create({\n        header: 'Are you sure to send feedback?',\n        buttons: [\n          {\n            text: 'Close',\n            role: 'cancel',\n            handler: () => { }\n          },\n          {\n            text: 'Confirm',\n            role: 'confirm',\n            cssClass: 'alert-button-confirm',\n            handler: async () => {\n              await this.feedBackService.addFeedback(feedBack);\n              this.toastService.success('Feedback sent.');\n              this.router.navigate(['/tabs/profile']);\n            },\n          }\n        ]\n      }\n      );\n      await alert.present();\n    } else {\n      this.toastService.error('Fill all details for Feedback!');\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FeedbackData } from 'src/app/models/login.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  url = environment.server_url\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  async addFeedback(feedback: FeedbackData): Promise<any> {\n    return this.http.post(`${this.url}feedback/add`, feedback).toPromise();\n  }\n}\n"],"names":["Component","Router","AlertController","FeedbackService","ToastService","FeedbackPage","constructor","toastService","feedBackService","router","alertController","ngOnInit","calculateLength","descLength","feedbackDesc","length","submitFeedback","feedbackType","feedBack","type","desc","alert","create","header","buttons","text","role","handler","cssClass","addFeedback","success","navigate","present","error","selector","template","HttpClient","Injectable","environment","http","server_url","feedback","post","url","toPromise","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}