{"version":3,"file":"src_app_payment_payment_module_ts.js","mappings":"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","sources":["./src/app/payment/payment-routing.module.ts","./src/app/payment/payment.module.ts","./src/app/payment/payment.page.ts","./node_modules/@ionic-native/paypal/__ivy_ngcc__/ngx/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentPage } from './payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentPageRoutingModule } from './payment-routing.module';\n\nimport { PaymentPage } from './payment.page';\nimport { PayPal } from '@ionic-native/paypal/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentPageRoutingModule\n  ],\n  declarations: [PaymentPage],\n  providers:[\n    PayPal\n  ]\n})\nexport class PaymentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.page.html',\n  styleUrls: ['./payment.page.scss'],\n})\nexport class PaymentPage implements OnInit {\n\n  paymentAmount: string = '99.99';\n  currency: string = 'USD';\n  currencyIcon: string = '$';\n\n  responseData: any = '';\n\n  constructor(private payPal: PayPal) { }\n\n  ngOnInit() {\n  }\n\n  payWithPaypal() {\n    this.payPal.init({\n      PayPalEnvironmentProduction: 'YOUR_PRODUCTION_CLIENT_ID',\n      PayPalEnvironmentSandbox: 'ARSm_pDtCl5xX-XyFqKCTtHh52-XfgOPE9JEax2rffd_6AQzrlko-1Wqi8GeTGcaMcrOKhcLq31jV7T0'\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        let payment = new PayPalPayment(this.paymentAmount, this.currency, 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then((res) => {\n          this.responseData = JSON.stringify(res, null, 1);\n          // Successfully paid\n          console.log('successfully paid')\n\n        }, () => {\n          // Error or render dialog closed without being successful\n        });\n      }, () => {\n        // Error in configuration\n      });\n    }, () => {\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n  }\n\n}\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as Éµngcc0 from '@angular/core';\nvar PayPal = /** @class */ (function (_super) {\n    __extends(PayPal, _super);\n    function PayPal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PayPal.prototype.version = function () { return cordova(this, \"version\", {}, arguments); };\n    PayPal.prototype.init = function (clientIdsForEnvironments) { return cordova(this, \"init\", {}, arguments); };\n    PayPal.prototype.prepareToRender = function (environment, configuration) { return cordova(this, \"prepareToRender\", {}, arguments); };\n    PayPal.prototype.renderSinglePaymentUI = function (payment) { return cordova(this, \"renderSinglePaymentUI\", {}, arguments); };\n    PayPal.prototype.clientMetadataID = function () { return cordova(this, \"clientMetadataID\", {}, arguments); };\n    PayPal.prototype.renderFuturePaymentUI = function () { return cordova(this, \"renderFuturePaymentUI\", {}, arguments); };\n    PayPal.prototype.renderProfileSharingUI = function (scopes) { return cordova(this, \"renderProfileSharingUI\", {}, arguments); };\n    PayPal.pluginName = \"PayPal\";\n    PayPal.plugin = \"com.paypal.cordova.mobilesdk\";\n    PayPal.pluginRef = \"PayPalMobile\";\n    PayPal.repo = \"https://github.com/paypal/PayPal-Cordova-Plugin\";\n    PayPal.platforms = [\"Android\", \"iOS\"];\nPayPal.Éµfac = /*@__PURE__*/ function () { var ÉµPayPal_BaseFactory; return function PayPal_Factory(t) { return (ÉµPayPal_BaseFactory || (ÉµPayPal_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(PayPal)))(t || PayPal); }; }();\nPayPal.Éµprov = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjectable({ token: PayPal, factory: function (t) { return PayPal.Éµfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(PayPal, [{\n        type: Injectable\n    }], null, null); })();\n    return PayPal;\n}(IonicNativePlugin));\nexport { PayPal };\nvar PayPalPayment = /** @class */ (function () {\n    function PayPalPayment(amount, currency, shortDescription, intent, details) {\n        /**\n         * Optional Build Notation code (\"BN code\"), obtained from partnerprogram@paypal.com,\n         * for your tracking purposes.\n         */\n        this.bnCode = 'PhoneGap_SP';\n        this.amount = amount;\n        this.currency = currency;\n        this.shortDescription = shortDescription;\n        this.intent = intent;\n        this.details = details;\n    }\n    return PayPalPayment;\n}());\nexport { PayPalPayment };\nvar PayPalItem = /** @class */ (function () {\n    /**\n     * The PayPalItem class defines an optional itemization for a payment.\n     * @see https://developer.paypal.com/docs/api/#item-object for more details.\n     * @param {String} name: Name of the item. 127 characters max\n     * @param {Number} quantity: Number of units. 10 characters max.\n     * @param {String} price: Unit price for this item 10 characters max.\n     * May be negative for \"coupon\" etc\n     * @param {String} currency: ISO standard currency code.\n     * @param {String} sku: The stock keeping unit for this item. 50 characters max (optional)\n     */\n    function PayPalItem(name, quantity, price, currency, sku) {\n        this.name = name;\n        this.quantity = quantity;\n        this.price = price;\n        this.currency = currency;\n        this.sku = sku;\n    }\n    return PayPalItem;\n}());\nexport { PayPalItem };\nvar PayPalPaymentDetails = /** @class */ (function () {\n    /**\n     * The PayPalPaymentDetails class defines optional amount details.\n     * @param {String} subtotal: Sub-total (amount) of items being paid for. 10 characters max with support for 2 decimal places.\n     * @param {String} shipping: Amount charged for shipping. 10 characters max with support for 2 decimal places.\n     * @param {String} tax: Amount charged for tax. 10 characters max with support for 2 decimal places.\n     */\n    function PayPalPaymentDetails(subtotal, shipping, tax) {\n        this.subtotal = subtotal;\n        this.shipping = shipping;\n        this.tax = tax;\n    }\n    return PayPalPaymentDetails;\n}());\nexport { PayPalPaymentDetails };\nvar PayPalConfiguration = /** @class */ (function () {\n    /**\n     * You use a PayPalConfiguration object to configure many aspects of how the SDK behaves.\n     * see defaults for options available\n     */\n    function PayPalConfiguration(options) {\n        var defaults = {\n            defaultUserEmail: null,\n            defaultUserPhoneCountryCode: null,\n            defaultUserPhoneNumber: null,\n            merchantName: null,\n            merchantPrivacyPolicyURL: null,\n            merchantUserAgreementURL: null,\n            acceptCreditCards: true,\n            payPalShippingAddressOption: 0,\n            rememberUser: true,\n            languageOrLocale: null,\n            disableBlurWhenBackgrounding: false,\n            presentingInPopover: false,\n            forceDefaultsInSandbox: false,\n            sandboxUserPassword: null,\n            sandboxUserPin: null,\n        };\n        if (options && typeof options === 'object') {\n            for (var i in options) {\n                if (defaults.hasOwnProperty(i)) {\n                    defaults[i] = options[i];\n                }\n            }\n        }\n        return defaults;\n    }\n    return PayPalConfiguration;\n}());\nexport { PayPalConfiguration };\nvar PayPalShippingAddress = /** @class */ (function () {\n    /**\n     * See the documentation of the individual properties for more detail.\n     * @param {String} recipientName: Name of the recipient at this address. 50 characters max.\n     * @param {String} line1: Line 1 of the address (e.g., Number, street, etc). 100 characters max.\n     * @param {String} line2: Line 2 of the address (e.g., Suite, apt #, etc). 100 characters max. Optional.\n     * @param {String} city: City name. 50 characters max.\n     * @param {String} state: 2-letter code for US states, and the equivalent for other countries. 100 characters max. Required in certain countries.\n     * @param {String} postalCode: ZIP code or equivalent is usually required for countries that have them. 20 characters max. Required in certain countries.\n     * @param {String} countryCode: 2-letter country code. 2 characters max.\n     */\n    function PayPalShippingAddress(recipientName, line1, line2, city, state, postalCode, countryCode) {\n        this.recipientName = recipientName;\n        this.line1 = line1;\n        this.line2 = line2;\n        this.city = city;\n        this.state = state;\n        this.postalCode = postalCode;\n        this.countryCode = countryCode;\n    }\n    return PayPalShippingAddress;\n}());\nexport { PayPalShippingAddress };\n\n"],"names":["__extends","Injectable","IonicNativePlugin","cordova","Éµngcc0","PayPal","_super","apply","arguments","prototype","version","init","clientIdsForEnvironments","prepareToRender","environment","configuration","renderSinglePaymentUI","payment","clientMetadataID","renderFuturePaymentUI","renderProfileSharingUI","scopes","pluginName","plugin","pluginRef","repo","platforms","Éµfac","ÉµPayPal_BaseFactory","PayPal_Factory","t","ÉµÉµgetInheritedFactory","Éµprov","ÉµÉµdefineInjectable","token","factory","ngDevMode","ÉµsetClassMetadata","type","PayPalPayment","amount","currency","shortDescription","intent","details","bnCode","PayPalItem","name","quantity","price","sku","PayPalPaymentDetails","subtotal","shipping","tax","PayPalConfiguration","options","defaults","defaultUserEmail","defaultUserPhoneCountryCode","defaultUserPhoneNumber","merchantName","merchantPrivacyPolicyURL","merchantUserAgreementURL","acceptCreditCards","payPalShippingAddressOption","rememberUser","languageOrLocale","disableBlurWhenBackgrounding","presentingInPopover","forceDefaultsInSandbox","sandboxUserPassword","sandboxUserPin","i","hasOwnProperty","PayPalShippingAddress","recipientName","line1","line2","city","state","postalCode","countryCode"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}