{"version":3,"file":"node_modules_stripe-elements_stripe-elements_dist_esm_stripe-payment-request-button_entry_js.js","mappings":"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","sources":["./node_modules/@stripe-elements/stripe-elements/dist/esm/stripe-payment-request-button.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-a7e5d6fd.js';\nimport { l as loadStripe } from './stripe.esm-ea56157a.js';\n\nconst stripePaymentRequestButtonCss = \":host{display:block}\";\n\nconst StripePaymentRequestButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.stripeLoaded = createEvent(this, \"stripeLoaded\", 7);\n    this.loadStripeStatus = '';\n    /**\n     * Overwrite the application name that registered\n     * For wrapper library (like Capacitor)\n     */\n    this.applicationName = '@stripe-elements/stripe-elements';\n    if (this.publishableKey !== undefined && this.paymentRequestOption !== undefined) {\n      this.initStripe(this.publishableKey, {\n        stripeAccount: this.stripeAccount,\n      });\n    }\n    else {\n      this.loadStripeStatus = 'failure';\n    }\n  }\n  /**\n   * Check isAvailable ApplePay or GooglePay.\n   * If you run this method, you should run before initStripe.\n   */\n  async isAvailable(type) {\n    if (this.publishableKey === undefined) {\n      throw 'You should run this method run, after set publishableKey.';\n    }\n    const stripe = await loadStripe(this.publishableKey, {\n      stripeAccount: this.stripeAccount,\n    });\n    const paymentRequest = stripe.paymentRequest({\n      country: 'US',\n      currency: 'usd',\n      total: {\n        label: 'Demo total',\n        amount: 1099,\n      },\n      disableWallets: ['applePay', 'googlePay', 'browserCard'].filter(method => method !== type),\n    });\n    const paymentRequestSupport = await paymentRequest.canMakePayment();\n    if (!paymentRequestSupport || (type === 'applePay' && !paymentRequestSupport[type]) || (type === 'googlePay' && !paymentRequestSupport[type])) {\n      throw 'This device can not use.';\n    }\n  }\n  /**\n   * Register event handler for `paymentRequest.on('paymentmethod'` event.\n   */\n  async setPaymentMethodEventHandler(handler) {\n    this.paymentMethodEventHandler = handler;\n  }\n  /**\n   * Register event handler for `paymentRequest.on('shippingoptionchange'` event.\n   */\n  async setPaymentRequestShippingOptionEventHandler(handler) {\n    this.shippingOptionEventHandler = handler;\n  }\n  /**\n   * Register event handler for `paymentRequest.on('shippingaddresschange'` event.\n   */\n  async setPaymentRequestShippingAddressEventHandler(handler) {\n    this.shippingAddressEventHandler = handler;\n  }\n  stripeLoadedEventHandler() {\n    const event = {\n      stripe: this.stripe,\n    };\n    if (this.stripeDidLoaded) {\n      this.stripeDidLoaded(event);\n    }\n    this.stripeLoaded.emit(event);\n  }\n  /**\n   * @param option\n   * @private\n   */\n  async setPaymentRequestOption(option) {\n    this.paymentRequestOption = option;\n    return this;\n  }\n  /**\n   * Get Stripe.js, and initialize elements\n   * @param publishableKey\n   * @param options\n   */\n  async initStripe(publishableKey, options = undefined) {\n    this.loadStripeStatus = 'loading';\n    loadStripe(publishableKey, {\n      stripeAccount: options === null || options === void 0 ? void 0 : options.stripeAccount,\n    })\n      .then(stripe => {\n      this.loadStripeStatus = 'success';\n      stripe.registerAppInfo({\n        name: this.applicationName,\n      });\n      this.stripe = stripe;\n      return;\n    })\n      .catch(e => {\n      console.log(e);\n      this.loadStripeStatus = 'failure';\n      return;\n    })\n      .then(() => {\n      if (!this.stripe) {\n        return;\n      }\n      // 後方互換のため、明確にfalseにしていないものはtrue扱い\n      return this.initElement(!(options === null || options === void 0 ? void 0 : options.showButton) === false);\n    })\n      .then(() => {\n      if (!this.stripe) {\n        return;\n      }\n      this.stripeLoadedEventHandler();\n    });\n  }\n  /**\n   * Initialize Component using Stripe Element\n   */\n  async initElement(showButton = true) {\n    const paymentRequest = this.stripe.paymentRequest(this.paymentRequestOption);\n    // Check if the Payment Request is available (or Apple Pay on the Web).\n    const paymentRequestSupport = await paymentRequest.canMakePayment();\n    if (!paymentRequestSupport) {\n      throw 'paymentRequest is not support.';\n    }\n    if (this.paymentMethodEventHandler) {\n      paymentRequest.on('paymentmethod', event => {\n        this.paymentMethodEventHandler(event, this.stripe);\n      });\n    }\n    if (this.shippingOptionEventHandler) {\n      paymentRequest.on('shippingoptionchange', event => {\n        this.shippingOptionEventHandler(event, this.stripe);\n      });\n    }\n    if (this.shippingAddressEventHandler) {\n      paymentRequest.on('shippingaddresschange', event => {\n        this.shippingAddressEventHandler(event, this.stripe);\n      });\n    }\n    if (showButton) {\n      // Display the Pay button by mounting the Element in the DOM.\n      const elements = this.stripe.elements();\n      const paymentRequestButton = elements.create('paymentRequestButton', {\n        paymentRequest,\n      });\n      const paymentRequestButtonElement = this.el.querySelector('#payment-request-button');\n      paymentRequestButton.mount(paymentRequestButtonElement);\n      // Show the payment request section.\n      this.el.querySelector('#payment-request').classList.add('visible');\n    }\n    else {\n      /**\n       * This method must be called as the result of a user interaction (for example, in a click handler).\n       * https://stripe.com/docs/js/payment_request/show\n       */\n      paymentRequest.show();\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { id: \"payment-request\" }, h(\"div\", { id: \"payment-request-button\" })), h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n};\nStripePaymentRequestButton.style = stripePaymentRequestButtonCss;\n\nexport { StripePaymentRequestButton as stripe_payment_request_button };\n"],"names":["r","registerInstance","c","createEvent","h","H","Host","g","getElement","l","loadStripe","stripePaymentRequestButtonCss","StripePaymentRequestButton","constructor","hostRef","stripeLoaded","loadStripeStatus","applicationName","publishableKey","undefined","paymentRequestOption","initStripe","stripeAccount","isAvailable","type","stripe","paymentRequest","country","currency","total","label","amount","disableWallets","filter","method","paymentRequestSupport","canMakePayment","setPaymentMethodEventHandler","handler","paymentMethodEventHandler","setPaymentRequestShippingOptionEventHandler","shippingOptionEventHandler","setPaymentRequestShippingAddressEventHandler","shippingAddressEventHandler","stripeLoadedEventHandler","event","stripeDidLoaded","emit","setPaymentRequestOption","option","options","then","registerAppInfo","name","catch","e","console","log","initElement","showButton","on","elements","paymentRequestButton","create","paymentRequestButtonElement","el","querySelector","mount","classList","add","show","render","id","style","stripe_payment_request_button"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}