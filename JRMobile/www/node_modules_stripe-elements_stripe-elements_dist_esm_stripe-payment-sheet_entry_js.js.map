{"version":3,"file":"node_modules_stripe-elements_stripe-elements_dist_esm_stripe-payment-sheet_entry_js.js","mappings":"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","sources":["./node_modules/@stripe-elements/stripe-elements/dist/esm/stripe-payment-sheet.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a7e5d6fd.js';\n\nconst stripePaymentSheetModalCss = \":host{display:block}\";\n\nconst StripePaymentSheet = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.closed = createEvent(this, \"closed\", 7);\n    /**\n     * Show the form label\n     */\n    this.showLabel = false;\n    /**\n     * The component will provide a function to call the `stripe.confirmCardPayment`API.\n     * If you want to customize the behavior, should set false.\n     * And listen the 'formSubmit' event on the element\n     */\n    this.shouldUseDefaultFormSubmitAction = true;\n    /**\n     * Default submit handle type.\n     * If you want to use `setupIntent`, should update this attribute.\n     * @example\n     * ```\n     * <stripe-payment-sheet intent-type=\"setup\" />\n     * ```\n     */\n    this.intentType = 'payment';\n    /**\n     * If true, the modal display close button\n     */\n    this.showCloseButton = true;\n    /**\n     * If true, show zip code field\n     */\n    this.zip = true;\n    /**\n     * Modal state.\n     * If true, the modal will open\n     */\n    this.open = false;\n  }\n  componentDidLoad() {\n    const modal = this.el.querySelector('stripe-sheet');\n    modal.addEventListener('close', () => {\n      this.closed.emit();\n    });\n  }\n  /**\n   * Get the inner component\n   */\n  async getStripePaymentSheetElement() {\n    return this.el.querySelector('stripe-payment');\n  }\n  /**\n   * open modal\n   */\n  async present() {\n    this.open = true;\n    return new Promise((resolve, reject) => {\n      const paymentSheet = this.el.querySelector('stripe-payment');\n      paymentSheet.addEventListener('formSubmit', async (props) => {\n        resolve(props);\n      });\n      this.el.addEventListener('closed', () => reject());\n    });\n  }\n  /**\n   * Update Stripe client loading process\n   */\n  async updateProgress(progress) {\n    const paymentSheet = this.el.querySelector('stripe-payment');\n    return paymentSheet.updateProgress(progress);\n  }\n  /**\n   * Remove the modal\n   */\n  async destroy() {\n    const paymentSheet = this.el.querySelector('stripe-payment');\n    paymentSheet.remove();\n    this.el.remove();\n  }\n  /**\n   *\n   * Add payment request button\n   */\n  async setPaymentRequestButton(options) {\n    const elements = this.el.getElementsByTagName('stripe-payment');\n    if (elements.length < 1) {\n      return;\n    }\n    const paymentSheetElement = elements[0];\n    if (!paymentSheetElement) {\n      return;\n    }\n    paymentSheetElement.setAttribute('show-payment-request-button', 'true');\n    if (this.applicationName) {\n      paymentSheetElement.setAttribute('application-name', this.applicationName);\n    }\n    paymentSheetElement.setPaymentRequestOption(options);\n  }\n  render() {\n    return (h(\"stripe-sheet\", { open: this.open, showCloseButton: this.showCloseButton }, h(\"stripe-payment\", { showLabel: this.showLabel, publishableKey: this.publishableKey, intentClientSecret: this.intentClientSecret, shouldUseDefaultFormSubmitAction: this.shouldUseDefaultFormSubmitAction, handleSubmit: this.handleSubmit, stripeDidLoaded: this.stripeDidLoaded, intentType: this.intentType, zip: this.zip, buttonLabel: this.buttonLabel, sheetTitle: this.sheetTitle, applicationName: this.applicationName })));\n  }\n  get el() { return getElement(this); }\n};\nStripePaymentSheet.style = stripePaymentSheetModalCss;\n\nexport { StripePaymentSheet as stripe_payment_sheet };\n"],"names":["r","registerInstance","c","createEvent","h","g","getElement","stripePaymentSheetModalCss","StripePaymentSheet","constructor","hostRef","closed","showLabel","shouldUseDefaultFormSubmitAction","intentType","showCloseButton","zip","open","componentDidLoad","modal","el","querySelector","addEventListener","emit","getStripePaymentSheetElement","present","Promise","resolve","reject","paymentSheet","props","updateProgress","progress","destroy","remove","setPaymentRequestButton","options","elements","getElementsByTagName","length","paymentSheetElement","setAttribute","applicationName","setPaymentRequestOption","render","publishableKey","intentClientSecret","handleSubmit","stripeDidLoaded","buttonLabel","sheetTitle","style","stripe_payment_sheet"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}