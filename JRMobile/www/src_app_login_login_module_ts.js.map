{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { NavController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { currentUser, ResetPassword, VerifyOTP } from '../models/login.model';\nimport { LocalStorageService } from '../service/local-storage/localstorage.service';\nimport { LoginService } from '../service/login/login.service';\nimport { ToastService } from '../service/toast/toast.service';\nimport OneSignal from 'onesignal-cordova-plugin';\nimport { Device } from '@capacitor/device';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginPage: boolean = true;\n  forgotPasswordPage: boolean = false;\n\n  isOTPReceived: boolean = false;\n  isOTPValidated: boolean = false;\n  resendOTP: boolean = false;\n\n  loginInput: any;\n  loginSubscription: Subscription;\n\n  resetUserName: any = new UntypedFormControl('', [Validators.required]);\n  resetOTP: any = new UntypedFormControl('', [Validators.required]);\n  newPassword: any = new UntypedFormControl('', [Validators.required, Validators.minLength(6)]);\n  dataForVerifyOTP: VerifyOTP;\n  dataForNewPassword: ResetPassword;\n\n  otpTimeLeft: number;\n  otpInterval: any;\n  deviceUUID = \"\";\n\n  constructor(\n    private loginService: LoginService,\n    private localStorage: LocalStorageService,\n    private navCtrl: NavController,\n    private platform: Platform,\n    private fb: UntypedFormBuilder,\n    private toastService: ToastService,\n    private router: Router\n\n  ) {\n    let vh = window.innerHeight;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n    this.loginInput = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    })\n  }\n\n  get log() { return this.loginInput.controls; };\n\n  ngOnInit() {\n  }\n\n  async ionViewWillEnter() {\n    this.loginSubscription = this.platform.backButton.subscribe(async e => {\n      if (this.router.url === '/login') {\n        this.localStorage.removeValue('access-token');\n        navigator[\"app\"].exitApp();\n      }\n    });\n  }\n\n  forgotPassPageShow() {\n    this.loginPage = false;\n    this.forgotPasswordPage = true;\n  }\n\n  loginPageShow() {\n    this.loginPage = true;\n    this.forgotPasswordPage = false;\n  }\n\n  async login() {\n    if (this.loginInput.valid) {\n      let loginInputData: any = {\n        password: this.loginInput.value.password,\n        username: this.loginInput.value.username.trim()\n      }\n      try {\n        const loginData = await this.loginService.login(loginInputData);\n        if (loginData) {\n          console.log(loginData);\n          this.localStorage.setValue('access-token', loginData.accessToken);\n          let currentUser: currentUser = await this.loginService.getCurrentUser();\n          this.localStorage.setValue('currentUser', currentUser);\n          this.localStorage.setValue('loginInput', loginInputData);\n          // const info = await Device.getId();\n          // this.deviceUUID = info.uuid\n          // await this.OneSignalInit();\n          // await this.getDeviceId();\n          this.navCtrl.navigateRoot('');\n        }\n      } catch (error: any) {\n        this.localStorage.clearStore();\n        this.toastService.error(error.error.message);\n      }\n    }\n  }\n\n  async getDeviceId() {\n    if (this.deviceUUID != '') {\n      await this.loginService.getDeviceDetail(this.deviceUUID);\n    }\n  }\n\n  async OneSignalInit(): Promise<void> {\n    OneSignal.setLogLevel(6, 0);\n\n    OneSignal.setAppId(\"140a0ae8-ba47-4d9a-8462-c7e5517aa347\");\n    OneSignal.setNotificationOpenedHandler((jsonData) => {\n      console.log('notificationOpenedCallback: ' + JSON.stringify(jsonData));\n    });\n\n    OneSignal.promptForPushNotificationsWithUserResponse((accepted) => {\n      console.log(\"User accepted notifications: \" + accepted);\n    });\n\n    OneSignal.setExternalUserId(this.deviceUUID);\n  }\n\n  async generateOTP() {\n    if (this.resetUserName.valid) {\n      this.resendOTP = false;\n      clearInterval(this.otpInterval);\n      try {\n        let rsp = await this.loginService.generateOTP(this.resetUserName.value.trim());\n        console.log('One Time Password is - ', rsp.otp);\n        this.toastService.success('OTP sent to your Email address');\n\n        this.isOTPReceived = true;\n        setTimeout(() => {\n          this.resendOTP = true;\n        }, 600000);\n        this.otpExpireTimer();\n\n      } catch (error: any) {\n        this.toastService.error(error.error.message);\n      }\n    }\n  }\n\n  async submitOTP() {\n    if (this.resetUserName.valid && this.resetOTP.valid) {\n      this.dataForVerifyOTP = {\n        username: this.resetUserName.value,\n        otp: this.resetOTP.value\n      }\n      try {\n        await this.loginService.verifyOTP(this.dataForVerifyOTP);\n        this.isOTPValidated = true;\n      } catch (error: any) {\n        this.toastService.error(error.error.message);\n      }\n    }\n  }\n\n  async resetPassword() {\n    if (this.resetUserName.valid && this.resetOTP.valid && this.newPassword.valid) {\n      this.dataForNewPassword = {\n        username: this.resetUserName.value,\n        otp: this.resetOTP.value,\n        password: this.newPassword.value\n      }\n      try {\n        await this.loginService.resetPassword(this.dataForNewPassword);\n        this.isOTPReceived = false;\n        this.isOTPValidated = false;\n        this.forgotPasswordPage = false;\n        this.resendOTP = false;\n        this.loginPage = true;\n        this.resetUserName.reset();\n        this.resetOTP.reset();\n        this.newPassword.reset();\n        this.toastService.success('Password changed successfully');\n      } catch (error: any) {\n        this.toastService.error(error.error.message);\n      }\n    }\n  }\n\n  otpExpireTimer() {\n    this.otpTimeLeft = 600;\n    this.otpInterval = setInterval(() => {\n      if (this.otpTimeLeft > 0) {\n        this.otpTimeLeft--;\n      } else {\n        clearInterval;\n      }\n    }, 1000)\n  }\n\n}\n"],"names":["Router","Component","UntypedFormBuilder","UntypedFormControl","Validators","NavController","Platform","LocalStorageService","LoginService","ToastService","OneSignal","LoginPage","constructor","loginService","localStorage","navCtrl","platform","fb","toastService","router","required","minLength","vh","window","innerHeight","document","documentElement","style","setProperty","loginInput","group","username","password","log","controls","ngOnInit","ionViewWillEnter","loginSubscription","backButton","subscribe","e","url","removeValue","navigator","exitApp","forgotPassPageShow","loginPage","forgotPasswordPage","loginPageShow","login","valid","loginInputData","value","trim","loginData","console","setValue","accessToken","currentUser","getCurrentUser","navigateRoot","error","clearStore","message","getDeviceId","deviceUUID","getDeviceDetail","OneSignalInit","setLogLevel","setAppId","setNotificationOpenedHandler","jsonData","JSON","stringify","promptForPushNotificationsWithUserResponse","accepted","setExternalUserId","generateOTP","resetUserName","resendOTP","clearInterval","otpInterval","rsp","otp","success","isOTPReceived","setTimeout","otpExpireTimer","submitOTP","resetOTP","dataForVerifyOTP","verifyOTP","isOTPValidated","resetPassword","newPassword","dataForNewPassword","reset","otpTimeLeft","setInterval","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}